security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: username
        app_user1_provider:
            entity:
                class: App\Entity\UserFront
                property: username
        app_users:
            chain:
                providers: ['app_user_provider', 'app_user1_provider']
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
              pattern: ^/api/login
              stateless: true
              provider: app_user_provider
              json_login:
                  check_path: /api/login_check # or api_login_check as defined in config/routes.yaml
                  success_handler: lexik_jwt_authentication.handler.authentication_success
                  failure_handler: lexik_jwt_authentication.handler.authentication_failure
        login1:
            pattern: ^/api/api/login
            stateless: true
            provider: app_user1_provider
            json_login:
                check_path: /api/api/login_check # or api_login_check as defined in config/routes.yaml
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login
            #two_factor:
                #auth_form_path: 2fa_login    # The route name you have used in the routes.yaml
                #check_path: 2fa_login_check  # The route name you have used in the routes.yaml


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        
        #- { path: ^/profile, roles: ROLE_USER }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/_wdt/, role: PUBLIC_ACCESS }
        - { path: ^/_profiler/, role: PUBLIC_ACCESS }
        - { path: ^/js/, role: PUBLIC_ACCESS }
        - { path: ^/css/, role: PUBLIC_ACCESS }
        - { path: ^/login$, role: PUBLIC_ACCESS }
        #- { path: ^/login_check$, role: PUBLIC_ACCESS }
        - { path: ^/ads, role: IS_AUTHENTICATED_FULLY}
        - { path: ^/home, role: IS_AUTHENTICATED_FULLY}
when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
